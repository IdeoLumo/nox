#!/usr/bin/env node
const gulp           = require('gulp')
const browserSync    = require('browser-sync').create();
const process        = require('process');


function parseOptions(args) {
  let context = {
    initCwd: process.env.INIT_CWD || process.cwd(),
    options: require('../src/default-options'),
    browserSync
  }

  for(let i=0;i<args.length;i++) {
    let arg = args[i]
    if(arg == '--cwd') {
      
    }
  
    console.log(arg)
  }

  return context
}

function help() {
  console.log(`nox [OPTIONS...] {COMMAND}

Build a static site using nox

OPTIONS:
  --cwd         Set the folder where the nox project is. Defaults to the
                directory this command is run from.

COMMANDS:
  start
  build
  watch
  clean
  verify

EXAMPLES:
  1. Starts the development web server & watches for changes 
     $ nox
  
  2. Only build the website, the nox project lays in ./nox_project
     $ nox --cwd ./nox_project build
`)
}

function applyLogs(gulpInstance) {
  // Exit with 0 or 1
  var failed = false;
  process.once('exit', function(code) {
    if (code === 0 && failed) {
      exit(1);
    }
  });

  // Total hack due to poor error management in orchestrator
  gulpInstance.on('err', function() {
    failed = true;
  });

  gulpInstance.on('task_start', function(e) {
    // TODO: batch these
    // so when 5 tasks start at once it only logs one time with all 5
    console.log('Starting', '\'' + e.task + '\'...');
  });

  gulpInstance.on('task_stop', function(e) {
    var time = e.hrDuration;
    console.log(
      'Finished', '\'' + e.task + '\'',
      'after', time);
  });

  gulpInstance.on('task_err', function(e) {
    var msg = e;
    var time = e.hrDuration;
    console.error(
      '\'' + e.task + '\'',
      'errored after',
      time
    );
    console.error(msg);
  });

  gulpInstance.on('task_not_found', function(err) {
    console.error('Task \'' + err.task + '\' is not in your gulpfile');
    console.error('Please check the documentation for proper gulpfile formatting');
    process.exit(1);
  });
}

function main(args) {
  let context = parseOptions(args)

  require('../src/register-gulp-tasks')(context)
  applyLogs(gulp)

  let tasks = ['default']
  
  if(args.length > 0) {
    if(args[0] == 'build') {
      tasks = ['build']
    } else if(args[0] == 'watch') {
      tasks = ['watch'] 
    } else if(args[0] == 'start') {
      tasks = ['default']
    } else if(args[0] == 'clean') {
      tasks = ['clean']
    } else if(args[0] == 'help' || args[0] == '-h' || args[0] == '--help') {
      return help()
    } else {
      throw new Error('Unknown command ' + args[0])
    }
  }
  gulp.start(...tasks);
}

main(process.argv.slice(2));

